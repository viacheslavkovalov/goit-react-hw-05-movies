{"version":3,"file":"static/js/387.8655d841.chunk.js","mappings":"6PAEaA,EAAQC,EAAAA,GAAAA,GAAH,sHAOLC,EAAcD,EAAAA,GAAAA,GAAH,0CAIXE,EAAaF,EAAAA,GAAAA,GAAH,gEAKVG,EAAaH,EAAAA,GAAAA,EAAH,oFAMVI,EAAcJ,EAAAA,GAAAA,EAAH,+C,SCbT,SAASK,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAWM,EAAKC,cAChE,CAACN,KAGF,iCACE,SAACV,EAAD,uBACA,SAACE,EAAD,UACsB,IAAnBM,EAAQS,OACPT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAAClB,EAAD,YACE,UAACC,EAAD,sBAAqBgB,MACrB,mBACA,SAACf,EAAD,UAAcgB,MAHCF,OAOnB,iE,uLChCJG,EAAM,mCACNC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,oBAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAIvC,SAASa,EAAaC,GAC3B,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,iCACSD,EADT,iCACqCc,EADrC,gCAKxB,SAASC,EAAkB3B,GAChC,OAAOc,EAAuB,GAAD,OAAID,EAAJ,kBAAsBb,EAAtB,oBAAyCY,IAGjE,SAASgB,EAAkB5B,GAChC,OAAOc,EAAuB,GAAD,OACxBD,EADwB,kBACNb,EADM,4BACqBY,IAI7C,SAASiB,EAAkB7B,GAChC,OAAOc,EAAuB,GAAD,OACxBD,EADwB,kBACNb,EADM,4BACqBY","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/apiService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  color: #406882;\n  font-size: 24px;\n  padding-bottom: 20px;\n  text-transform: uppercase;\n`;\n\nexport const ReviewsList = styled.ul`\n  padding: 10px;\n`;\n\nexport const ReviewItem = styled.li`\n  padding-top: 20px;\n  padding: 10px;\n`;\n\nexport const ItemAuthor = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  color: #406882;\n`;\n\nexport const ItemContent = styled.p`\n  font-style: italic;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieApi from '../../services/apiService';\nimport {\n  Title,\n  ReviewsList,\n  ReviewItem,\n  ItemAuthor,\n  ItemContent,\n} from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    movieApi.fetchMovieReviews(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <>\n      <Title>Reviews</Title>\n      <ReviewsList>\n        {reviews.length !== 0 ? (\n          reviews.map(({ id, author, content }) => (\n            <ReviewItem key={id}>\n              <ItemAuthor>Author: {author}</ItemAuthor>\n              <br />\n              <ItemContent>{content}</ItemContent>\n            </ReviewItem>\n          ))\n        ) : (\n          <p>We haven't had any reviews yet</p>\n        )}\n      </ReviewsList>\n    </>\n  );\n}\n","const KEY = '2404946c0f95b1815b7a98e7cf38f39e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Movie not Found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n}\n\nexport function searchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n}\n"],"names":["Title","styled","ReviewsList","ReviewItem","ItemAuthor","ItemContent","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","movieApi","then","data","results","length","map","id","author","content","KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","searchMovies","query","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}
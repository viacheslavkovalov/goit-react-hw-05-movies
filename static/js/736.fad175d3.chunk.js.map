{"version":3,"file":"static/js/736.fad175d3.chunk.js","mappings":"iQAEaA,EAAQC,EAAAA,GAAAA,GAAH,sHAOLC,EAAWD,EAAAA,GAAAA,GAAH,6LASRE,EAAWF,EAAAA,GAAAA,GAAH,yMAORG,EAAWH,EAAAA,GAAAA,IAAH,+GAORI,EAAYJ,EAAAA,GAAAA,IAAH,sGAOTK,EAAWL,EAAAA,GAAAA,IAAH,yCAIRM,EAAWN,EAAAA,GAAAA,EAAH,oF,mBC7BN,SAASO,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BH,GAASI,MAAK,SAAAC,GAAO,OAAIN,EAAQM,EAAQP,WACnE,CAACE,KAGF,iCACE,SAACZ,EAAD,oBACA,SAACE,EAAD,UACmB,IAAhBQ,EAAKQ,OACJR,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,cAAtC,OACP,SAACrB,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,CACEoB,IACEJ,EAAY,yCAC0BA,GAClCK,EAENC,IAAK,CAAEL,KAAAA,MAET,UAAChB,EAAD,YACE,UAACC,EAAD,yBAAsBgB,MACtB,SAAChB,EAAD,iBAAWe,QAAX,IAAWA,EAAAA,EAAQE,WAZVJ,OAkBjB,kE,uLC9CJQ,EAAM,mCACNC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,oBAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAIvC,SAASa,EAAaC,GAC3B,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,iCACSD,EADT,iCACqCc,EADrC,gCAKxB,SAASC,EAAkB/B,GAChC,OAAOkB,EAAuB,GAAD,OAAID,EAAJ,kBAAsBjB,EAAtB,oBAAyCgB,IAGjE,SAASgB,EAAkBhC,GAChC,OAAOkB,EAAuB,GAAD,OACxBD,EADwB,kBACNjB,EADM,4BACqBgB,IAI7C,SAASiB,EAAkBjC,GAChC,OAAOkB,EAAuB,GAAD,OACxBD,EADwB,kBACNjB,EADM,4BACqBgB,M","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/apiService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  color: #406882;\n  font-size: 24px;\n  padding-bottom: 20px;\n  text-transform: uppercase;\n`;\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 25px;\n`;\n\nexport const CastItem = styled.li`\n  position: relative;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n`;\n\nexport const HeroCard = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 4px;\n`;\n\nexport const HeroImage = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 4px;\n`;\n\nexport const HeroInfo = styled.div`\n  padding: 5px;\n`;\n\nexport const HeroDesc = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  color: #8c8c8c;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieApi from '../../services/apiService';\nimport {\n  Title,\n  CastList,\n  CastItem,\n  HeroCard,\n  HeroImage,\n  HeroInfo,\n  HeroDesc,\n} from './Cast.styled';\nimport ImageNotFound from '../../images/placeholder.png';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    movieApi.fetchMovieCredits(movieId).then(results => setCast(results.cast));\n  }, [movieId]);\n\n  return (\n    <>\n      <Title>Cast</Title>\n      <CastList>\n        {cast.length !== 0 ? (\n          cast.map(({ id, profile_path, name, character, original_name }) => (\n            <CastItem key={id}>\n              <HeroCard>\n                <HeroImage\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                      : ImageNotFound\n                  }\n                  alt={{ name }}\n                />\n                <HeroInfo>\n                  <HeroDesc>Character: {character}</HeroDesc>\n                  <HeroDesc>{name ?? original_name}</HeroDesc>\n                </HeroInfo>\n              </HeroCard>\n            </CastItem>\n          ))\n        ) : (\n          <p>We have no information about it</p>\n        )}\n        {}\n      </CastList>\n    </>\n  );\n}\n","const KEY = '2404946c0f95b1815b7a98e7cf38f39e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Movie not Found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n}\n\nexport function searchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n}\n"],"names":["Title","styled","CastList","CastItem","HeroCard","HeroImage","HeroInfo","HeroDesc","Cast","useState","cast","setCast","movieId","useParams","useEffect","movieApi","then","results","length","map","id","profile_path","name","character","original_name","src","ImageNotFound","alt","KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","searchMovies","query","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}